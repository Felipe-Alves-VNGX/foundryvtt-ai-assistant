class AIUserManager{constructor(){this.aiUser=null,this.aiUserId=null,this.sessionData=new Map,this.lastActivity=null,this.sessionTimeout=18e5}async initialize(){console.log("AI Assistant | Inicializando AIUserManager...");try{this.aiUser=await this.findExistingAIUser(),this.aiUser?(console.log("AI Assistant | Usu√°rio IA encontrado:",this.aiUser.name),this.aiUserId=this.aiUser.id,await this.validateAIUser()):(console.log("AI Assistant | Usu√°rio IA n√£o encontrado, criando..."),await this.createAIUser()),this.setupSessionMonitoring(),this.updateActivity()}catch(e){throw console.error("AI Assistant | Erro na inicializa√ß√£o do AIUserManager:",e),e}}async findExistingAIUser(){const e=game.users.find(e=>e.getFlag("foundryvtt-ai-assistant","isAIUser"));if(e){return await this.validateUserData(e)?e:null}return null}async validateUserData(e){try{if(!e||!e.id||!e.name)return!1;if(!e.getFlag("foundryvtt-ai-assistant","isAIUser"))return!1;return void 0!==game.users.get(e.id)}catch(e){return console.warn("AI Assistant | Erro na valida√ß√£o do usu√°rio:",e),!1}}async createAIUser(e={}){const s={name:"AI Assistant",avatar:"icons/svg/robot.svg",color:"#00ff88",role:CONST.USER_ROLES.PLAYER},t=foundry.utils.mergeObject(s,e);try{return game.users.find(e=>e.name===t.name)&&(t.name=`${t.name} (${Date.now()})`),this.aiUser=await User.create(t),this.aiUserId=this.aiUser.id,await this.aiUser.setFlag("foundryvtt-ai-assistant","isAIUser",!0),await this.aiUser.setFlag("foundryvtt-ai-assistant","createdAt",Date.now()),await this.aiUser.setFlag("foundryvtt-ai-assistant","version","1.0.0"),await this.setupInitialPermissions(),console.log("AI Assistant | Usu√°rio IA criado com sucesso:",this.aiUser.name),await this.notifyUserCreation(),this.aiUser}catch(e){throw console.error("AI Assistant | Erro ao criar usu√°rio IA:",e),new Error(`Falha ao criar usu√°rio IA: ${e.message}`)}}async setupInitialPermissions(){if(this.aiUser)try{const e={ACTOR_CREATE:!0,DRAWING_CREATE:!0,ITEM_CREATE:!0,JOURNAL_CREATE:!0,MACRO_SCRIPT:!0,MESSAGE_WHISPER:!0,NOTE_CREATE:!0,SETTINGS_MODIFY:!1,SHOW_CURSOR:!0,SHOW_RULER:!0,TEMPLATE_CREATE:!0,TOKEN_CREATE:!0,TOKEN_CONFIGURE:!0,WALL_DOORS:!0};await this.aiUser.setFlag("foundryvtt-ai-assistant","permissions",e),console.log("AI Assistant | Permiss√µes iniciais configuradas")}catch(e){console.error("AI Assistant | Erro ao configurar permiss√µes:",e)}}async validateAIUser(){if(!this.aiUser)return!1;try{const e=game.users.get(this.aiUserId);if(!e)return console.warn("AI Assistant | Usu√°rio IA n√£o encontrado, recriando..."),await this.createAIUser(),!0;return e.getFlag("foundryvtt-ai-assistant","isAIUser")||(console.warn("AI Assistant | Flag de usu√°rio IA perdida, restaurando..."),await e.setFlag("foundryvtt-ai-assistant","isAIUser",!0)),this.aiUser=e,!0}catch(e){return console.error("AI Assistant | Erro na valida√ß√£o do usu√°rio IA:",e),!1}}async updateAIUserPermissions(e){if(!this.aiUser)throw new Error("Usu√°rio IA n√£o inicializado");try{const s={...this.aiUser.getFlag("foundryvtt-ai-assistant","permissions")||{},...e};await this.aiUser.setFlag("foundryvtt-ai-assistant","permissions",s),console.log("AI Assistant | Permiss√µes atualizadas:",e),await this.logPermissionChange(e)}catch(e){throw console.error("AI Assistant | Erro ao atualizar permiss√µes:",e),e}}async logPermissionChange(e){const s=this.aiUser.getFlag("foundryvtt-ai-assistant","permissionHistory")||[];s.push({timestamp:Date.now(),changes:e,changedBy:game.user.id}),s.length>50&&s.splice(0,s.length-50),await this.aiUser.setFlag("foundryvtt-ai-assistant","permissionHistory",s)}async deleteAIUser(e=!1){if(!e)throw new Error("Confirma√ß√£o necess√°ria para deletar usu√°rio IA");if(this.aiUser)try{const e=this.aiUser.name;this.aiUserId;await this.cleanupUserData(),await this.aiUser.delete(),this.aiUser=null,this.aiUserId=null,this.sessionData.clear(),console.log("AI Assistant | Usu√°rio IA deletado:",e),ui.notifications.info(`Usu√°rio IA "${e}" foi removido`)}catch(e){throw console.error("AI Assistant | Erro ao deletar usu√°rio IA:",e),e}else console.warn("AI Assistant | Nenhum usu√°rio IA para deletar")}async cleanupUserData(){if(this.aiUser)try{const e=game.messages.filter(e=>e.user?.id===this.aiUserId);for(const s of e)await s.delete();const s=[game.actors,game.items,game.scenes,game.journal,game.macros];for(const e of s)for(const s of e.contents)if(s.ownership?.[this.aiUserId]){const e={...s.ownership};delete e[this.aiUserId],await s.update({ownership:e})}console.log("AI Assistant | Dados do usu√°rio IA limpos")}catch(e){console.error("AI Assistant | Erro na limpeza de dados:",e)}}setupSessionMonitoring(){setInterval(()=>{this.checkSessionTimeout()},3e5)}checkSessionTimeout(){if(!this.lastActivity)return;Date.now()-this.lastActivity>this.sessionTimeout&&(console.log("AI Assistant | Sess√£o expirada, renovando..."),this.refreshSession())}async refreshSession(){try{await this.validateAIUser(),this.updateActivity(),console.log("AI Assistant | Sess√£o renovada")}catch(e){console.error("AI Assistant | Erro ao renovar sess√£o:",e)}}updateActivity(){this.lastActivity=Date.now()}async notifyUserCreation(){const e={content:"ü§ñ <strong>AI Assistant</strong> foi conectado ao mundo e est√° pronto para ajudar!",type:CONST.CHAT_MESSAGE_TYPES.OTHER,speaker:{alias:"Sistema"}};await ChatMessage.create(e)}getAIUser(){return this.aiUser}getAIUserId(){return this.aiUserId}isInitialized(){return null!==this.aiUser&&null!==this.aiUserId}getSessionData(e){return this.sessionData.get(e)}setSessionData(e,s){this.sessionData.set(e,s),this.updateActivity()}clearSessionData(){this.sessionData.clear()}async getAIUserStats(){if(!this.aiUser)return null;try{return{id:this.aiUserId,name:this.aiUser.name,createdAt:this.aiUser.getFlag("foundryvtt-ai-assistant","createdAt"),lastActivity:this.lastActivity,sessionActive:this.lastActivity&&Date.now()-this.lastActivity<this.sessionTimeout,permissionHistory:this.aiUser.getFlag("foundryvtt-ai-assistant","permissionHistory")||[],version:this.aiUser.getFlag("foundryvtt-ai-assistant","version")}}catch(e){return console.error("AI Assistant | Erro ao obter estat√≠sticas:",e),null}}}class APIHandler{constructor(e,s){this.permissionManager=e,this.logger=s,this.initialized=!1,this.operationQueue=[],this.isProcessingQueue=!1}async initialize(){console.log("AI Assistant | Inicializando APIHandler...");try{this.validateFoundryAPIs(),this.setupDefaultTemplates(),this.startQueueProcessor(),this.initialized=!0,console.log("AI Assistant | APIHandler inicializado com sucesso")}catch(e){throw console.error("AI Assistant | Erro na inicializa√ß√£o do APIHandler:",e),e}}validateFoundryAPIs(){const e=["game.actors","game.items","game.scenes","game.journal","game.macros","game.tables","game.playlists"];for(const s of e)if(!foundry.utils.getProperty(window,s))throw new Error(`API necess√°ria n√£o encontrada: ${s}`)}setupDefaultTemplates(){this.templates={actor:{character:{type:"character",system:{abilities:{str:{value:10},dex:{value:10},con:{value:10},int:{value:10},wis:{value:10},cha:{value:10}},attributes:{hp:{value:8,max:8},ac:{value:10}},details:{level:{value:1},xp:{value:0}}}},npc:{type:"npc",system:{abilities:{str:{value:10},dex:{value:10},con:{value:10},int:{value:10},wis:{value:10},cha:{value:10}},attributes:{hp:{value:4,max:4},ac:{value:10}},details:{cr:.125,type:{value:"humanoid"}}}}},item:{weapon:{type:"weapon",system:{weaponType:"simpleM",damage:{parts:[["1d6","slashing"]]},properties:{finesse:!1,light:!1}}},spell:{type:"spell",system:{level:1,school:"evocation",components:{verbal:!0,somatic:!0,material:!1}}}}}}startQueueProcessor(){setInterval(async()=>{!this.isProcessingQueue&&this.operationQueue.length>0&&await this.processOperationQueue()},100)}async processOperationQueue(){this.isProcessingQueue=!0;try{for(;this.operationQueue.length>0;){const e=this.operationQueue.shift();await this.executeOperation(e)}}catch(e){console.error("AI Assistant | Erro no processamento da fila:",e)}finally{this.isProcessingQueue=!1}}async executeOperation(e){try{const s=await e.execute();e.callback&&e.callback(null,s)}catch(s){e.callback&&e.callback(s,null)}}queueOperation(e){return new Promise((s,t)=>{this.operationQueue.push({...e,callback:(e,a)=>{e?t(e):s(a)}})})}async createActor(e,s={}){return this.queueOperation({execute:async()=>{const t=Date.now();try{if(!this.permissionManager.checkPermission("createActor"))throw new Error("Permiss√£o insuficiente para criar atores");if(this.validateActorData(e),!e.system&&e.type&&this.templates.actor[e.type]&&(e=foundry.utils.mergeObject(this.templates.actor[e.type],e,{inplace:!1})),!1!==s.checkDuplicates){if(game.actors.find(s=>s.name===e.name)&&!s.allowDuplicates)throw new Error(`Ator com nome "${e.name}" j√° existe`)}const a=await Actor.create(e),i=Date.now()-t;return this.logger?.info("Ator criado",{actorId:a.id,name:a.name,type:a.type,duration:`${i}ms`}),{success:!0,actor:a,message:`Ator "${a.name}" criado com sucesso`}}catch(s){return this.logger?.error("Erro ao criar ator",{error:s.message,data:e}),{success:!1,error:s.message,message:`Erro ao criar ator: ${s.message}`}}}})}async updateActor(e,s,t={}){return this.queueOperation({execute:async()=>{try{if(!this.permissionManager.checkPermission("updateActor"))throw new Error("Permiss√£o insuficiente para atualizar atores");const t=game.actors.get(e);if(!t)throw new Error(`Ator com ID "${e}" n√£o encontrado`);return this.validateActorData(s,!0),await t.update(s),this.logger?.info("Ator atualizado",{actorId:t.id,name:t.name,updatedFields:Object.keys(s)}),{success:!0,actor:t,message:`Ator "${t.name}" atualizado com sucesso`}}catch(s){return this.logger?.error("Erro ao atualizar ator",{actorId:e,error:s.message}),{success:!1,error:s.message,message:`Erro ao atualizar ator: ${s.message}`}}}})}async deleteActor(e,s={}){return this.queueOperation({execute:async()=>{try{if(!this.permissionManager.checkPermission("deleteActor"))throw new Error("Permiss√£o insuficiente para remover atores");const t=game.actors.get(e);if(!t)throw new Error(`Ator com ID "${e}" n√£o encontrado`);if("character"===t.type&&t.hasPlayerOwner&&!s.force)throw new Error("N√£o √© poss√≠vel remover personagem de jogador sem confirma√ß√£o");const a=t.name;return await t.delete(),this.logger?.info("Ator removido",{actorId:e,name:a}),{success:!0,message:`Ator "${a}" removido com sucesso`}}catch(s){return this.logger?.error("Erro ao remover ator",{actorId:e,error:s.message}),{success:!1,error:s.message,message:`Erro ao remover ator: ${s.message}`}}}})}async queryActors(e={},s={}){try{if(!this.permissionManager.checkPermission("queryActors"))throw new Error("Permiss√£o insuficiente para buscar atores");let t=game.actors.contents;if(e.name){const s=new RegExp(e.name,"i");t=t.filter(e=>s.test(e.name))}e.type&&(t=t.filter(s=>s.type===e.type)),e.level&&(t=t.filter(s=>{const t=s.system?.details?.level?.value;return t===e.level})),s.limit&&(t=t.slice(0,s.limit));const a=t.map(e=>({id:e.id,name:e.name,type:e.type,img:e.img,level:e.system?.details?.level?.value,hp:e.system?.attributes?.hp}));return{success:!0,actors:a,count:a.length,message:`Encontrados ${a.length} ator(es)`}}catch(e){return{success:!1,error:e.message,message:`Erro na busca: ${e.message}`}}}validateActorData(e,s=!1){if(!s&&!e.name)throw new Error("Nome √© obrigat√≥rio");if(e.name&&(e.name.length<1||e.name.length>50))throw new Error("Nome deve ter entre 1 e 50 caracteres");if(!s&&!e.type)throw new Error("Tipo √© obrigat√≥rio");if(e.type&&!["character","npc","vehicle"].includes(e.type))throw new Error("Tipo deve ser character, npc ou vehicle")}async createItem(e,s=null,t={}){return this.queueOperation({execute:async()=>{try{if(!this.permissionManager.checkPermission("createItem"))throw new Error("Permiss√£o insuficiente para criar itens");let t;if(this.validateItemData(e),!e.system&&e.type&&this.templates.item[e.type]&&(e=foundry.utils.mergeObject(this.templates.item[e.type],e,{inplace:!1})),s){const a=game.actors.get(s);if(!a)throw new Error(`Ator com ID "${s}" n√£o encontrado`);t=await a.createEmbeddedDocuments("Item",[e]),t=t[0]}else t=await Item.create(e);return this.logger?.info("Item criado",{itemId:t.id,name:t.name,type:t.type,actorId:s}),{success:!0,item:t,message:`Item "${t.name}" criado com sucesso`}}catch(s){return this.logger?.error("Erro ao criar item",{error:s.message,data:e}),{success:!1,error:s.message,message:`Erro ao criar item: ${s.message}`}}}})}async updateItem(e,s,t=null){return this.queueOperation({execute:async()=>{try{if(!this.permissionManager.checkPermission("updateItem"))throw new Error("Permiss√£o insuficiente para atualizar itens");let a;if(t){const s=game.actors.get(t);if(!s)throw new Error(`Ator com ID "${t}" n√£o encontrado`);a=s.items.get(e)}else a=game.items.get(e);if(!a)throw new Error(`Item com ID "${e}" n√£o encontrado`);return await a.update(s),{success:!0,item:a,message:`Item "${a.name}" atualizado com sucesso`}}catch(e){return{success:!1,error:e.message,message:`Erro ao atualizar item: ${e.message}`}}}})}validateItemData(e,s=!1){if(!s&&!e.name)throw new Error("Nome √© obrigat√≥rio");if(!s&&!e.type)throw new Error("Tipo √© obrigat√≥rio")}async createScene(e,s={}){return this.queueOperation({execute:async()=>{try{if(!this.permissionManager.checkPermission("createScene"))throw new Error("Permiss√£o insuficiente para criar cenas");this.validateSceneData(e);const s=await Scene.create(e);return this.logger?.info("Cena criada",{sceneId:s.id,name:s.name}),{success:!0,scene:s,message:`Cena "${s.name}" criada com sucesso`}}catch(e){return{success:!1,error:e.message,message:`Erro ao criar cena: ${e.message}`}}}})}async activateScene(e){return this.queueOperation({execute:async()=>{try{if(!this.permissionManager.checkPermission("activateScene"))throw new Error("Permiss√£o insuficiente para ativar cenas");const s=game.scenes.get(e);if(!s)throw new Error(`Cena com ID "${e}" n√£o encontrada`);return await s.activate(),{success:!0,scene:s,message:`Cena "${s.name}" ativada com sucesso`}}catch(e){return{success:!1,error:e.message,message:`Erro ao ativar cena: ${e.message}`}}}})}validateSceneData(e,s=!1){if(!s&&!e.name)throw new Error("Nome √© obrigat√≥rio")}async createJournalEntry(e,s={}){return this.queueOperation({execute:async()=>{try{if(!this.permissionManager.checkPermission("createJournal"))throw new Error("Permiss√£o insuficiente para criar entradas de jornal");this.validateJournalData(e);const s=await JournalEntry.create(e);return this.logger?.info("Entrada de jornal criada",{journalId:s.id,name:s.name}),{success:!0,journal:s,message:`Entrada de jornal "${s.name}" criada com sucesso`}}catch(e){return{success:!1,error:e.message,message:`Erro ao criar entrada de jornal: ${e.message}`}}}})}validateJournalData(e,s=!1){if(!s&&!e.name)throw new Error("Nome √© obrigat√≥rio")}async createMacro(e,s={}){return this.queueOperation({execute:async()=>{try{if(!this.permissionManager.checkPermission("createMacro"))throw new Error("Permiss√£o insuficiente para criar macros");this.validateMacroData(e);const s=await Macro.create(e);return this.logger?.info("Macro criado",{macroId:s.id,name:s.name,type:s.type}),{success:!0,macro:s,message:`Macro "${s.name}" criado com sucesso`}}catch(e){return{success:!1,error:e.message,message:`Erro ao criar macro: ${e.message}`}}}})}async executeMacro(e,s={}){return this.queueOperation({execute:async()=>{try{if(!this.permissionManager.checkPermission("executeMacro"))throw new Error("Permiss√£o insuficiente para executar macros");const t=game.macros.get(e);if(!t)throw new Error(`Macro com ID "${e}" n√£o encontrado`);const a=await t.execute(s);return this.logger?.info("Macro executado",{macroId:t.id,name:t.name,args:s}),{success:!0,result:a,message:`Macro "${t.name}" executado com sucesso`}}catch(e){return{success:!1,error:e.message,message:`Erro ao executar macro: ${e.message}`}}}})}validateMacroData(e,s=!1){if(!s&&!e.name)throw new Error("Nome √© obrigat√≥rio");if(!s&&!e.command)throw new Error("Comando √© obrigat√≥rio")}async rollDice(e,s={}){try{if(!this.permissionManager.checkPermission("rollDice"))throw new Error("Permiss√£o insuficiente para rolar dados");const t=new Roll(e);return await t.evaluate(),s.toChat&&await t.toMessage({speaker:{alias:"AI Assistant"},flavor:s.flavor||`Rolagem: ${e}`}),{success:!0,roll:t,total:t.total,formula:e,message:`Rolagem ${e} = ${t.total}`}}catch(e){return{success:!1,error:e.message,message:`Erro na rolagem: ${e.message}`}}}getStats(){return{initialized:this.initialized,queueLength:this.operationQueue.length,isProcessingQueue:this.isProcessingQueue,collections:{actors:game.actors.size,items:game.items.size,scenes:game.scenes.size,journal:game.journal.size,macros:game.macros.size,tables:game.tables.size,playlists:game.playlists.size}}}}class PermissionManager{constructor(){this.permissions=new Map,this.permissionLevels=new Map,this.temporaryPermissions=new Map,this.permissionHistory=[],this.initialized=!1}async initialize(){console.log("AI Assistant | Inicializando PermissionManager...");try{this.definePermissionLevels(),await this.loadPermissions(),0===this.permissions.size&&await this.setDefaultPermissions(),this.startTemporaryPermissionCleanup(),this.initialized=!0,console.log("AI Assistant | PermissionManager inicializado com sucesso")}catch(e){throw console.error("AI Assistant | Erro na inicializa√ß√£o do PermissionManager:",e),e}}definePermissionLevels(){this.permissionLevels.set("NONE",{level:0,name:"Nenhuma",description:"Sem permiss√µes",permissions:{}}),this.permissionLevels.set("BASIC",{level:1,name:"B√°sico",description:"Permiss√µes b√°sicas de leitura e chat",permissions:{sendMessage:!0,sendWhisper:!0,rollDice:!0,queryActors:!0,queryItems:!0,queryScenes:!0,queryJournal:!0,queryMacros:!0,queryTables:!0,queryPlaylists:!0,queryCompendium:!0,viewDocuments:!0}}),this.permissionLevels.set("STANDARD",{level:2,name:"Padr√£o",description:"Permiss√µes para criar e editar conte√∫do b√°sico",permissions:{...this.permissionLevels.get("BASIC").permissions,createItem:!0,updateItem:!0,deleteItem:!0,createJournal:!0,updateJournal:!0,deleteJournal:!0,createMacro:!0,updateMacro:!0,executeMacro:!0,updateActor:!0,importFromCompendium:!0}}),this.permissionLevels.set("ADVANCED",{level:3,name:"Avan√ßado",description:"Permiss√µes para manipula√ß√£o completa de conte√∫do",permissions:{...this.permissionLevels.get("STANDARD").permissions,createActor:!0,deleteActor:!0,createScene:!0,updateScene:!0,deleteScene:!0,activateScene:!0,createRollTable:!0,updateRollTable:!0,deleteRollTable:!0,rollTable:!0,createPlaylist:!0,updatePlaylist:!0,deletePlaylist:!0,playAudio:!0,createToken:!0,updateToken:!0,deleteToken:!0,manageCombat:!0}}),this.permissionLevels.set("FULL",{level:4,name:"Completo",description:"Todas as permiss√µes (use com cuidado)",permissions:{...this.permissionLevels.get("ADVANCED").permissions,manageUsers:!0,modifySettings:!0,manageModules:!0,deleteAnyDocument:!0,executeArbitraryCode:!0,modifyPermissions:!0,accessFileSystem:!0,networkAccess:!0}})}async loadPermissions(){try{const e=this.getStoredPermissions()||{},s=this.getStoredPermissionLevel()||"BASIC";await this.setPermissionLevel(s);for(const[s,t]of Object.entries(e))this.permissions.set(s,t);console.log("AI Assistant | Permiss√µes carregadas:",s)}catch(e){console.warn("AI Assistant | Erro ao carregar permiss√µes, usando padr√£o:",e),await this.setDefaultPermissions()}}getStoredPermissions(){try{return JSON.parse(localStorage.getItem("ai-assistant-permissions")||"{}")}catch{return{}}}getStoredPermissionLevel(){return localStorage.getItem("ai-assistant-permission-level")||"BASIC"}async savePermissions(){try{const e=Object.fromEntries(this.permissions);localStorage.setItem("ai-assistant-permissions",JSON.stringify(e)),this.permissionHistory.push({timestamp:Date.now(),permissions:{...e},changedBy:"system"}),this.permissionHistory.length>100&&this.permissionHistory.splice(0,this.permissionHistory.length-100),localStorage.setItem("ai-assistant-permission-history",JSON.stringify(this.permissionHistory)),console.log("AI Assistant | Permiss√µes salvas")}catch(e){throw console.error("AI Assistant | Erro ao salvar permiss√µes:",e),e}}async setDefaultPermissions(){console.log("AI Assistant | Configurando permiss√µes padr√£o (BASIC)"),await this.setPermissionLevel("BASIC")}async setPermissionLevel(e){const s=this.permissionLevels.get(e);if(!s)throw new Error(`N√≠vel de permiss√£o "${e}" n√£o encontrado`);this.permissions.clear();for(const[e,t]of Object.entries(s.permissions))this.permissions.set(e,t);localStorage.setItem("ai-assistant-permission-level",e),await this.savePermissions(),console.log(`AI Assistant | N√≠vel de permiss√£o definido para: ${s.name}`),this.notifyPermissionChange(e,s.name)}checkPermission(e){if(!this.initialized)return console.warn("AI Assistant | PermissionManager n√£o inicializado, negando permiss√£o"),!1;const s=this.temporaryPermissions.get(e);if(s&&s.expires>Date.now())return s.granted;const t=this.permissions.get(e)||!1;return t||console.debug(`AI Assistant | Permiss√£o negada para: ${e}`),t}async grantPermission(e,s=!0,t={}){if(!this.checkPermission("modifyPermissions")&&!t.force)throw new Error("Permiss√£o insuficiente para modificar permiss√µes");const a=this.permissions.get(e);return this.permissions.set(e,s),t.temporary||await this.savePermissions(),console.log(`AI Assistant | Permiss√£o ${s?"concedida":"revogada"}: ${e}`),this.logPermissionChange(e,a,s,t),!0}async revokePermission(e,s={}){return await this.grantPermission(e,!1,s)}grantTemporaryPermission(e,s=3e5,t=!0){const a=Date.now()+s;return this.temporaryPermissions.set(e,{granted:t,expires:a,grantedAt:Date.now(),grantedBy:"system"}),console.log(`AI Assistant | Permiss√£o tempor√°ria ${t?"concedida":"revogada"}: ${e} (expira em ${s/1e3}s)`),setTimeout(()=>{this.temporaryPermissions.delete(e),console.log(`AI Assistant | Permiss√£o tempor√°ria expirada: ${e}`)},s),!0}async requestPermission(e,s="",t={}){return this.checkPermission(e)?{granted:!0,message:"Permiss√£o j√° concedida"}:(console.log(`AI Assistant | Solicita√ß√£o de permiss√£o: ${e} - Motivo: ${s}`),t.autoApprove&&this.isBasicPermission(e)?(this.grantTemporaryPermission(e,t.duration||3e5),{granted:!0,temporary:!0,message:"Permiss√£o tempor√°ria auto-aprovada"}):{granted:!1,pending:!0,message:"Solicita√ß√£o enviada aos GMs"})}isBasicPermission(e){return["rollDice","sendMessage","queryActors","queryItems","queryScenes","viewDocuments"].includes(e)}notifyPermissionChange(e,s){console.log(`AI Assistant | N√≠vel de permiss√£o da IA alterado para: ${s}`)}logPermissionChange(e,s,t,a){const i={timestamp:Date.now(),action:e,oldValue:s,newValue:t,changedBy:"system",temporary:a.temporary||!1,reason:a.reason||""};this.permissionHistory.push(i)}startTemporaryPermissionCleanup(){setInterval(()=>{const e=Date.now(),s=[];for(const[t,a]of this.temporaryPermissions.entries())a.expires<=e&&s.push(t);for(const e of s)this.temporaryPermissions.delete(e),console.log(`AI Assistant | Permiss√£o tempor√°ria expirada: ${e}`)},6e4)}canCreateActors(){return this.checkPermission("createActor")}canDeleteActors(){return this.checkPermission("deleteActor")}canModifyScenes(){return this.checkPermission("createScene")||this.checkPermission("updateScene")}canExecuteMacros(){return this.checkPermission("executeMacro")}canManageUsers(){return this.checkPermission("manageUsers")}getCurrentPermissionLevel(){return this.getStoredPermissionLevel()||"BASIC"}getAvailablePermissionLevels(){return Array.from(this.permissionLevels.entries()).map(([e,s])=>({key:e,name:s.name,description:s.description,level:s.level}))}getActivePermissions(){const e=[],s=Date.now();for(const[s,t]of this.permissions.entries())t&&e.push({action:s,type:"permanent",granted:t});for(const[t,a]of this.temporaryPermissions.entries())a.expires>s&&e.push({action:t,type:"temporary",granted:a.granted,expires:a.expires,remaining:a.expires-s});return e}getPermissionHistory(e=50){return this.permissionHistory.slice(-e)}getStats(){return{initialized:this.initialized,currentLevel:this.getCurrentPermissionLevel(),totalPermissions:this.permissions.size,activePermissions:this.getActivePermissions().length,temporaryPermissions:this.temporaryPermissions.size,historyEntries:this.permissionHistory.length}}async resetToDefault(){console.warn("AI Assistant | Resetando permiss√µes para padr√£o"),this.permissions.clear(),this.temporaryPermissions.clear(),this.permissionHistory=[],await this.setDefaultPermissions(),console.log("AI Assistant | Permiss√µes da IA foram resetadas para o padr√£o")}validatePermissionRequest(e,s={}){return["deleteAnyDocument","executeArbitraryCode","modifySettings","manageUsers","accessFileSystem","networkAccess"].includes(e)?(console.warn(`AI Assistant | A√ß√£o perigosa solicitada: ${e}`),{valid:!1,reason:"A√ß√£o requer aprova√ß√£o manual de GM",requiresGMApproval:!0}):{valid:!0}}}class ChatInterface{constructor(e,s,t){this.permissionManager=e,this.apiHandler=s,this.aiUserManager=t,this.initialized=!1,this.commandPrefix="/ai",this.commands=new Map,this.conversationHistory=[],this.activeConversations=new Map,this.aiProviders=new Map,this.currentProvider=null}async initialize(){console.log("AI Assistant | Inicializando ChatInterface...");try{this.registerCommands(),this.setupChatListeners(),await this.loadAIProviders(),await this.setDefaultProvider(),this.initialized=!0,console.log("AI Assistant | ChatInterface inicializado com sucesso")}catch(e){throw console.error("AI Assistant | Erro na inicializa√ß√£o do ChatInterface:",e),e}}registerCommands(){this.commands.set("help",{description:"Mostra comandos dispon√≠veis",usage:"/ai help [comando]",permission:"sendMessage",handler:this.handleHelpCommand.bind(this)}),this.commands.set("status",{description:"Mostra status do sistema",usage:"/ai status",permission:"sendMessage",handler:this.handleStatusCommand.bind(this)}),this.commands.set("roll",{description:"Rola dados",usage:"/ai roll <f√≥rmula> [motivo]",permission:"rollDice",handler:this.handleRollCommand.bind(this)}),this.commands.set("create",{description:"Cria elementos do jogo",usage:"/ai create <tipo> <dados>",permission:"createActor",handler:this.handleCreateCommand.bind(this)}),this.commands.set("search",{description:"Busca elementos do jogo",usage:"/ai search <tipo> [filtros]",permission:"queryActors",handler:this.handleSearchCommand.bind(this)}),this.commands.set("macro",{description:"Executa macro",usage:"/ai macro <nome> [argumentos]",permission:"executeMacro",handler:this.handleMacroCommand.bind(this)}),this.commands.set("scene",{description:"Gerencia cenas",usage:"/ai scene <a√ß√£o> [par√¢metros]",permission:"createScene",handler:this.handleSceneCommand.bind(this)}),this.commands.set("config",{description:"Configura o assistente",usage:"/ai config <op√ß√£o> <valor>",permission:"modifySettings",handler:this.handleConfigCommand.bind(this)}),this.commands.set("chat",{description:"Conversa livre com IA",usage:"/ai chat <mensagem>",permission:"sendMessage",handler:this.handleChatCommand.bind(this)})}setupChatListeners(){this.simulateFoundryHooks()}simulateFoundryHooks(){console.log("AI Assistant | Hooks de chat configurados (simula√ß√£o)")}async onChatMessage(e,s,t){try{const s=e.content;if(s.startsWith(this.commandPrefix))return void await this.processCommand(s,e);if(this.isMentionedInMessage(s))return void await this.processAIMention(s,e);this.isRelevantMessage(e)&&this.addToConversationHistory(e)}catch(e){console.error("AI Assistant | Erro ao processar mensagem de chat:",e),await this.sendErrorMessage(e.message)}}async processCommand(e,s){const t=e.slice(this.commandPrefix.length).trim().split(" "),a=t[0],i=t.slice(1);console.log(`AI Assistant | Processando comando: ${a}`,i);const o=this.commands.get(a);if(o)if(this.permissionManager.checkPermission(o.permission))try{await o.handler(i,s)}catch(e){console.error(`AI Assistant | Erro no comando ${a}:`,e),await this.sendMessage(`‚ùå Erro ao executar comando: ${e.message}`)}else await this.sendMessage(`üîí Permiss√£o insuficiente para executar "${a}". Permiss√£o necess√°ria: ${o.permission}`);else await this.sendMessage(`‚ùå Comando "${a}" n√£o reconhecido. Use \`/ai help\` para ver comandos dispon√≠veis.`)}async processAIMention(e,s){console.log("AI Assistant | Processando men√ß√£o √† IA:",e);const t=e.replace(/@AI|@ai/gi,"").trim();0!==t.length?await this.handleFreeConversation(t,s):await this.sendMessage("üëã Ol√°! Como posso ajudar? Use `/ai help` para ver os comandos dispon√≠veis.")}isMentionedInMessage(e){return/@AI|@ai/i.test(e)}isRelevantMessage(e){return"ic"===e.type||"ooc"===e.type}addToConversationHistory(e){this.conversationHistory.push({timestamp:Date.now(),user:e.user?.name||"Unknown",content:e.content,type:e.type}),this.conversationHistory.length>100&&this.conversationHistory.shift()}async handleHelpCommand(e,s){if(e.length>0){const s=e[0],t=this.commands.get(s);if(t){const e=`\n                    <div class="ai-help-specific">\n                        <h3>üìñ Ajuda: ${s}</h3>\n                        <p><strong>Descri√ß√£o:</strong> ${t.description}</p>\n                        <p><strong>Uso:</strong> <code>${t.usage}</code></p>\n                        <p><strong>Permiss√£o necess√°ria:</strong> ${t.permission}</p>\n                    </div>\n                `;await this.sendMessage(e)}else await this.sendMessage(`‚ùå Comando "${s}" n√£o encontrado.`)}else{const e=`\n                <div class="ai-help-general">\n                    <h3>ü§ñ AI Assistant - Comandos Dispon√≠veis</h3>\n                    <ul>${Array.from(this.commands.entries()).filter(([e,s])=>this.permissionManager.checkPermission(s.permission)).map(([e,s])=>`<li><strong>${e}</strong> - ${s.description}</li>`).join("")}</ul>\n                    <p><em>Use <code>/ai help &lt;comando&gt;</code> para ajuda espec√≠fica.</em></p>\n                    <p><em>Voc√™ tamb√©m pode me mencionar com @AI para conversar livremente!</em></p>\n                </div>\n            `;await this.sendMessage(e)}}async handleStatusCommand(e,s){const t=await this.aiUserManager.getAIUserStats(),a=this.permissionManager.getStats(),i=this.apiHandler.getStats(),o=`\n            <div class="ai-status">\n                <h3>üîç Status do AI Assistant</h3>\n                <div class="status-section">\n                    <h4>üë§ Usu√°rio IA</h4>\n                    <p>Nome: ${t?.name||"N/A"}</p>\n                    <p>Status: ${t?.sessionActive?"üü¢ Ativo":"üî¥ Inativo"}</p>\n                    <p>√öltima atividade: ${t?.lastActivity?new Date(t.lastActivity).toLocaleString():"N/A"}</p>\n                </div>\n                <div class="status-section">\n                    <h4>üîê Permiss√µes</h4>\n                    <p>N√≠vel atual: ${a.currentLevel}</p>\n                    <p>Permiss√µes ativas: ${a.activePermissions}</p>\n                    <p>Permiss√µes tempor√°rias: ${a.temporaryPermissions}</p>\n                </div>\n                <div class="status-section">\n                    <h4>‚öôÔ∏è API Handler</h4>\n                    <p>Status: ${i.initialized?"üü¢ Inicializado":"üî¥ N√£o inicializado"}</p>\n                    <p>Fila de opera√ß√µes: ${i.queueLength}</p>\n                    <p>Processando: ${i.isProcessingQueue?"Sim":"N√£o"}</p>\n                </div>\n                <div class="status-section">\n                    <h4>üé≤ Cole√ß√µes do Mundo</h4>\n                    <p>Atores: ${i.collections?.actors||0}</p>\n                    <p>Itens: ${i.collections?.items||0}</p>\n                    <p>Cenas: ${i.collections?.scenes||0}</p>\n                    <p>Jornais: ${i.collections?.journal||0}</p>\n                </div>\n            </div>\n        `;await this.sendMessage(o)}async handleRollCommand(e,s){if(0===e.length)return void await this.sendMessage("‚ùå Uso: `/ai roll <f√≥rmula> [motivo]`\nExemplo: `/ai roll 1d20+5 Teste de Percep√ß√£o`");const t=e[0],a=e.slice(1).join(" ")||"Rolagem solicitada pela IA",i=await this.apiHandler.rollDice(t,{toChat:!0,flavor:a});i.success?await this.sendMessage(`üé≤ **${t}** = **${i.total}**${a?` (${a})`:""}`):await this.sendMessage(`‚ùå Erro na rolagem: ${i.error}`)}async handleCreateCommand(e,s){if(e.length<2)return void await this.sendMessage("‚ùå Uso: `/ai create <tipo> <dados>`\nTipos: actor, item, scene, journal, macro");const t=e[0].toLowerCase(),a=e.slice(1).join(" ");try{let e,s;try{e=JSON.parse(a)}catch{e={name:a}}switch(t){case"actor":s=await this.apiHandler.createActor(e);break;case"item":s=await this.apiHandler.createItem(e);break;case"scene":s=await this.apiHandler.createScene(e);break;case"journal":s=await this.apiHandler.createJournalEntry(e);break;case"macro":s=await this.apiHandler.createMacro(e);break;default:return void await this.sendMessage(`‚ùå Tipo "${t}" n√£o suportado. Tipos v√°lidos: actor, item, scene, journal, macro`)}s.success?await this.sendMessage(`‚úÖ ${s.message}`):await this.sendMessage(`‚ùå ${s.message}`)}catch(e){await this.sendMessage(`‚ùå Erro ao criar ${t}: ${e.message}`)}}async handleSearchCommand(e,s){if(0===e.length)return void await this.sendMessage("‚ùå Uso: `/ai search <tipo> [filtros]`\nTipos: actors, items, scenes, journal");const t=e[0].toLowerCase(),a=e.slice(1).join(" ");try{let e;const s=a?{name:a}:{};switch(t){case"actors":e=await this.apiHandler.queryActors(s,{limit:10});break;case"items":e={success:!1,message:"Busca de itens n√£o implementada ainda"};break;case"scenes":e={success:!1,message:"Busca de cenas n√£o implementada ainda"};break;default:return void await this.sendMessage(`‚ùå Tipo "${t}" n√£o suportado para busca.`)}if(e.success)if(e.actors&&e.actors.length>0){const s=e.actors.map(e=>`‚Ä¢ **${e.name}** (${e.type}) - N√≠vel ${e.level||"N/A"}`).join("\n");await this.sendMessage(`üîç **Atores encontrados:**\n${s}`)}else await this.sendMessage("üîç Nenhum resultado encontrado.");else await this.sendMessage(`‚ùå ${e.message}`)}catch(e){await this.sendMessage(`‚ùå Erro na busca: ${e.message}`)}}async handleMacroCommand(e,s){if(0===e.length)return void await this.sendMessage("‚ùå Uso: `/ai macro <nome> [argumentos]`");const t=e[0],a=e.slice(1),i=await this.apiHandler.executeMacro("mock-macro-id",a);i.success?await this.sendMessage(`‚öôÔ∏è Macro "${t}" executado com sucesso.`):await this.sendMessage(`‚ùå ${i.message}`)}async handleSceneCommand(e,s){if(0===e.length)return void await this.sendMessage("‚ùå Uso: `/ai scene <a√ß√£o> [par√¢metros]`\nA√ß√µes: activate, create, list");const t=e[0].toLowerCase(),a=e.slice(1);try{switch(t){case"activate":if(0===a.length)return void await this.sendMessage("‚ùå Uso: `/ai scene activate <nome_ou_id>`");await this.sendMessage(`üé¨ Tentando ativar cena: ${a[0]}`);break;case"create":if(0===a.length)return void await this.sendMessage("‚ùå Uso: `/ai scene create <nome>`");const e={name:a.join(" ")},s=await this.apiHandler.createScene(e);s.success?await this.sendMessage(`‚úÖ ${s.message}`):await this.sendMessage(`‚ùå ${s.message}`);break;case"list":await this.sendMessage("üé¨ **Cenas dispon√≠veis:**\n‚Ä¢ Taverna do Javali Dourado\n‚Ä¢ Floresta Sombria\n‚Ä¢ Masmorra Antiga");break;default:await this.sendMessage(`‚ùå A√ß√£o "${t}" n√£o reconhecida. A√ß√µes v√°lidas: activate, create, list`)}}catch(e){await this.sendMessage(`‚ùå Erro no comando de cena: ${e.message}`)}}async handleConfigCommand(e,s){if(e.length<2)return void await this.sendMessage("‚ùå Uso: `/ai config <op√ß√£o> <valor>`\nOp√ß√µes: provider, permission-level");const t=e[0].toLowerCase(),a=e.slice(1).join(" ");try{switch(t){case"provider":await this.setAIProvider(a),await this.sendMessage(`‚öôÔ∏è Provedor de IA alterado para: ${a}`);break;case"permission-level":await this.permissionManager.setPermissionLevel(a.toUpperCase()),await this.sendMessage(`üîê N√≠vel de permiss√£o alterado para: ${a}`);break;default:await this.sendMessage(`‚ùå Op√ß√£o "${t}" n√£o reconhecida.`)}}catch(e){await this.sendMessage(`‚ùå Erro na configura√ß√£o: ${e.message}`)}}async handleChatCommand(e,s){const t=e.join(" ");t?await this.handleFreeConversation(t,s):await this.sendMessage("‚ùå Uso: `/ai chat <mensagem>`")}async handleFreeConversation(e,s){if(this.currentProvider)try{const t=this.buildConversationContext(s),a=await this.currentProvider.processMessage(e,t);await this.sendMessage(`ü§ñ ${a}`),this.addToConversationHistory({user:"AI Assistant",content:a,type:"ai-response",timestamp:Date.now()})}catch(e){console.error("AI Assistant | Erro na conversa livre:",e),await this.sendMessage("‚ùå Desculpe, ocorreu um erro ao processar sua mensagem. Tente novamente.")}else await this.sendMessage("‚ùå Nenhum provedor de IA configurado. Use `/ai config provider <nome>` para configurar.")}buildConversationContext(e){return{user:e?.user?.name||"Unknown",recentHistory:this.conversationHistory.slice(-10),worldContext:this.getWorldContext(),timestamp:Date.now()}}getWorldContext(){return{activeScene:"Taverna do Javali Dourado",playerCount:4,systemName:"D&D 5e"}}async loadAIProviders(){console.log("AI Assistant | Carregando provedores de IA..."),this.aiProviders.set("mock",{name:"Mock Provider",processMessage:async(e,s)=>`Voc√™ disse: "${e}". Esta √© uma resposta simulada.`})}async setDefaultProvider(){this.currentProvider=this.aiProviders.get("mock"),console.log("AI Assistant | Provedor padr√£o configurado: Mock Provider")}async setAIProvider(e){const s=this.aiProviders.get(e);if(!s)throw new Error(`Provedor "${e}" n√£o encontrado`);this.currentProvider=s,console.log(`AI Assistant | Provedor alterado para: ${s.name}`)}async sendMessage(e,s={}){const t={content:e,type:s.type||"other",speaker:{alias:s.alias||"AI Assistant"},whisper:s.whisper||null};return console.log("AI Assistant | Enviando mensagem:",e),t}async sendErrorMessage(e){await this.sendMessage(`‚ùå **Erro:** ${e}`,{type:"error"})}async sendWhisper(e,s){await this.sendMessage(e,{whisper:[s]})}getStats(){return{initialized:this.initialized,commandsRegistered:this.commands.size,conversationHistoryLength:this.conversationHistory.length,activeConversations:this.activeConversations.size,availableProviders:this.aiProviders.size,currentProvider:this.currentProvider?.name||null}}async processDirectMessage(e,s={}){const t={content:e,user:{name:s.userName||"Test User"},type:s.type||"ic"};await this.onChatMessage(t,{},"test-user-id")}}class ManusProvider{constructor(e={}){this.name="Manus",this.apiKey=e.apiKey||process.env.MANUS_API_KEY,this.baseUrl=e.baseUrl||"https://api.manus.im",this.model=e.model||"gpt-4.1-mini",this.maxTokens=e.maxTokens||2e3,this.temperature=e.temperature||.7,this.initialized=!1,this.rateLimiter=new Map,this.requestHistory=[]}async initialize(){console.log("Manus Provider | Inicializando...");try{if(!this.apiKey)throw new Error("API Key do Manus n√£o configurada");await this.testConnection(),this.initialized=!0,console.log("Manus Provider | Inicializado com sucesso")}catch(e){throw console.error("Manus Provider | Erro na inicializa√ß√£o:",e),e}}async testConnection(){try{const e=await fetch(`${this.baseUrl}/v1/models`,{method:"GET",headers:{Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"}});if(!e.ok)throw new Error(`Erro na conex√£o: ${e.status} ${e.statusText}`);const s=await e.json();return console.log("Manus Provider | Conex√£o testada com sucesso"),s}catch(e){throw console.error("Manus Provider | Erro no teste de conex√£o:",e),new Error(`Falha na conex√£o com Manus: ${e.message}`)}}async processMessage(e,s={}){if(!this.initialized)throw new Error("Provedor Manus n√£o inicializado");if(!this.checkRateLimit())throw new Error("Rate limit excedido. Tente novamente em alguns segundos.");try{const t=this.buildPrompt(e,s),a=await this.makeAPIRequest(t),i=this.processResponse(a);return this.addToHistory(e,i,s),i}catch(e){throw console.error("Manus Provider | Erro ao processar mensagem:",e),new Error(`Erro do Manus: ${e.message}`)}}buildPrompt(e,s){const t=this.getSystemPrompt(s),a=this.formatConversationHistory(s.recentHistory||[]),i=this.formatWorldContext(s.worldContext||{});return{model:this.model,messages:[{role:"system",content:t},...a,{role:"user",content:`${i}\n\nUsu√°rio: ${e}`}],max_tokens:this.maxTokens,temperature:this.temperature,stream:!1}}getSystemPrompt(e){return`Voc√™ √© um AI Assistant integrado ao FoundryVTT, um sistema de RPG virtual. Suas responsabilidades incluem:\n\n1. **Assist√™ncia em Jogos de RPG**: Ajudar com regras, cria√ß√£o de personagens, narrativa e mec√¢nicas de jogo.\n\n2. **Gerenciamento de Conte√∫do**: Criar e modificar atores, itens, cenas, jornais e outros elementos do jogo quando solicitado.\n\n3. **Rolagem de Dados**: Interpretar e executar rolagens de dados usando a nota√ß√£o padr√£o (ex: 1d20+5).\n\n4. **Narrativa e Interpreta√ß√£o**: Ajudar com descri√ß√µes, di√°logos de NPCs e desenvolvimento de hist√≥ria.\n\n5. **Consultas de Regras**: Responder perguntas sobre sistemas de RPG, especialmente D&D 5e.\n\n**Diretrizes de Comportamento:**\n- Seja √∫til, criativo e envolvente\n- Mantenha o tom apropriado para o contexto do jogo\n- Quando criar conte√∫do, forne√ßa detalhes suficientes mas concisos\n- Se n√£o tiver certeza sobre uma regra, admita e sugira onde encontrar a informa√ß√£o\n- Respeite o tom e estilo da campanha em andamento\n\n**Contexto Atual:**\n- Sistema: ${e.worldContext?.systemName||"D&D 5e"}\n- Cena Ativa: ${e.worldContext?.activeScene||"N√£o especificada"}\n- Jogadores: ${e.worldContext?.playerCount||"N√£o especificado"}\n\nResponda de forma natural e √∫til, como se fosse um assistente experiente de RPG.`}formatConversationHistory(e){return e.slice(-10).map(e=>({role:"AI Assistant"===e.user?"assistant":"user",content:`${e.user}: ${e.content}`}))}formatWorldContext(e){return e&&0!==Object.keys(e).length?`**Contexto do Mundo:**\n- Cena Ativa: ${e.activeScene||"N/A"}\n- Sistema: ${e.systemName||"N/A"}\n- Jogadores Conectados: ${e.playerCount||"N/A"}`:""}async makeAPIRequest(e){const s=Date.now();try{const t=await fetch(`${this.baseUrl}/v1/chat/completions`,{method:"POST",headers:{Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok){const e=await t.json().catch(()=>({}));throw new Error(`API Error ${t.status}: ${e.error?.message||t.statusText}`)}const a=await t.json(),i=Date.now()-s;return console.log(`Manus Provider | Requisi√ß√£o conclu√≠da em ${i}ms`),a}catch(e){const t=Date.now()-s;throw console.error(`Manus Provider | Erro na requisi√ß√£o (${t}ms):`,e),e}}processResponse(e){try{if(!e.choices||0===e.choices.length)throw new Error("Resposta da API n√£o cont√©m choices");const s=e.choices[0];if(!s.message||!s.message.content)throw new Error("Resposta da API n√£o cont√©m conte√∫do");let t=s.message.content.trim();return t=this.processSpecialCommands(t),t.length>2e3&&(t=t.substring(0,1997)+"..."),t}catch(e){throw console.error("Manus Provider | Erro ao processar resposta:",e),new Error(`Erro ao processar resposta: ${e.message}`)}}processSpecialCommands(e){return e=(e=e.replace(/\[ROLL:([^\]]+)\]/g,(e,s)=>`üé≤ ${s}`)).replace(/\[CREATE_(\w+):([^\]]+)\]/g,(e,s,t)=>`‚ú® Criando ${s.toLowerCase()}: ${t}`)}addToHistory(e,s,t){this.requestHistory.push({timestamp:Date.now(),user:t.user||"Unknown",message:e,response:s,model:this.model,tokens:s.length}),this.requestHistory.length>100&&this.requestHistory.shift()}checkRateLimit(){const e=Date.now(),s=e-6e4,t=Array.from(this.rateLimiter.values()).filter(e=>e>s);return this.rateLimiter.clear(),t.forEach((e,s)=>{this.rateLimiter.set(s,e)}),!(t.length>=30)&&(this.rateLimiter.set(this.rateLimiter.size,e),!0)}async generateNPC(e,s={}){const t=`Crie um NPC do tipo "${e}" para D&D 5e. ${s.description?`Descri√ß√£o adicional: ${s.description}`:""}\n\nForne√ßa:\n1. Nome\n2. Ra√ßa e classe (se aplic√°vel)\n3. Breve descri√ß√£o f√≠sica\n4. Personalidade (2-3 tra√ßos)\n5. Motiva√ß√£o principal\n6. Estat√≠sticas b√°sicas (se necess√°rio)\n\nFormato: JSON estruturado para f√°cil importa√ß√£o.`;return await this.processMessage(t,{worldContext:{systemName:"D&D 5e"},specialRequest:"npc_generation"})}async explainRule(e,s="D&D 5e"){const t=`Explique a regra "${e}" do sistema ${s}. Seja claro e conciso, incluindo exemplos pr√°ticos se relevante.`;return await this.processMessage(t,{worldContext:{systemName:s},specialRequest:"rule_explanation"})}async generateDescription(e,s,t=""){const a=`Gere uma descri√ß√£o ${e} para: ${s}. ${t?`Contexto: ${t}`:""}\n\nA descri√ß√£o deve ser:\n- Envolvente e imersiva\n- Apropriada para RPG\n- Entre 2-4 frases\n- Rica em detalhes sensoriais`;return await this.processMessage(a,{specialRequest:"description_generation"})}updateConfig(e){e.apiKey&&(this.apiKey=e.apiKey),e.baseUrl&&(this.baseUrl=e.baseUrl),e.model&&(this.model=e.model),e.maxTokens&&(this.maxTokens=e.maxTokens),e.temperature&&(this.temperature=e.temperature),console.log("Manus Provider | Configura√ß√£o atualizada")}getConfig(){return{name:this.name,model:this.model,maxTokens:this.maxTokens,temperature:this.temperature,initialized:this.initialized,hasApiKey:!!this.apiKey}}getStats(){const e=this.requestHistory.filter(e=>Date.now()-e.timestamp<36e5);return{name:this.name,initialized:this.initialized,totalRequests:this.requestHistory.length,recentRequests:e.length,averageResponseTime:this.calculateAverageResponseTime(),rateLimitStatus:{current:this.rateLimiter.size,max:30,windowMs:6e4}}}calculateAverageResponseTime(){if(0===this.requestHistory.length)return 0;const e=this.requestHistory.slice(-10),s=e.reduce((e,s)=>e+(s.responseTime||1e3),0);return Math.round(s/e.length)}cleanup(){this.rateLimiter.clear(),this.requestHistory=[],this.initialized=!1,console.log("Manus Provider | Cleanup realizado")}}class OpenAIProvider{constructor(e={}){this.name="OpenAI",this.apiKey=e.apiKey||process.env.OPENAI_API_KEY,this.baseUrl=e.baseUrl||"https://api.openai.com",this.model=e.model||"gpt-4",this.maxTokens=e.maxTokens||2e3,this.temperature=e.temperature||.7,this.initialized=!1,this.rateLimiter=new Map,this.requestHistory=[],this.tokenUsage={total:0,prompt:0,completion:0}}async initialize(){console.log("OpenAI Provider | Inicializando...");try{if(!this.apiKey)throw new Error("API Key da OpenAI n√£o configurada");await this.testConnection(),this.initialized=!0,console.log("OpenAI Provider | Inicializado com sucesso")}catch(e){throw console.error("OpenAI Provider | Erro na inicializa√ß√£o:",e),e}}async testConnection(){try{const e=await fetch(`${this.baseUrl}/v1/models`,{method:"GET",headers:{Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"}});if(!e.ok)throw new Error(`Erro na conex√£o: ${e.status} ${e.statusText}`);const s=await e.json();return console.log("OpenAI Provider | Conex√£o testada com sucesso"),s}catch(e){throw console.error("OpenAI Provider | Erro no teste de conex√£o:",e),new Error(`Falha na conex√£o com OpenAI: ${e.message}`)}}async processMessage(e,s={}){if(!this.initialized)throw new Error("Provedor OpenAI n√£o inicializado");if(!this.checkRateLimit())throw new Error("Rate limit excedido. Tente novamente em alguns segundos.");try{const t=this.buildPrompt(e,s),a=await this.makeAPIRequest(t),i=this.processResponse(a);return this.updateTokenUsage(a.usage),this.addToHistory(e,i,s,a.usage),i}catch(e){throw console.error("OpenAI Provider | Erro ao processar mensagem:",e),new Error(`Erro da OpenAI: ${e.message}`)}}buildPrompt(e,s){const t=this.getSystemPrompt(s),a=this.formatConversationHistory(s.recentHistory||[]),i=this.formatWorldContext(s.worldContext||{});return{model:this.model,messages:[{role:"system",content:t},...a,{role:"user",content:`${i}\n\nUsu√°rio: ${e}`}],max_tokens:this.maxTokens,temperature:this.temperature,presence_penalty:.1,frequency_penalty:.1}}getSystemPrompt(e){return`Voc√™ √© um AI Assistant especializado em RPG integrado ao FoundryVTT. Suas fun√ß√µes incluem:\n\n**Capacidades Principais:**\n1. **Assist√™ncia em RPG**: Ajudar com regras, mec√¢nicas, cria√ß√£o de personagens e narrativa\n2. **Gerenciamento de Jogo**: Criar e modificar elementos do jogo (atores, itens, cenas, etc.)\n3. **Interpreta√ß√£o de Dados**: Executar e interpretar rolagens de dados\n4. **Narrativa Criativa**: Gerar descri√ß√µes, di√°logos de NPCs e elementos de hist√≥ria\n5. **Consulta de Regras**: Responder sobre sistemas de RPG, especialmente D&D 5e\n\n**Diretrizes de Comportamento:**\n- Seja preciso e √∫til nas respostas sobre regras\n- Mantenha um tom envolvente e apropriado para RPG\n- Quando criar conte√∫do, seja criativo mas equilibrado\n- Se incerto sobre uma regra, seja honesto e sugira fontes\n- Adapte-se ao tom e estilo da campanha\n\n**Comandos Especiais:**\n- Use [ROLL:f√≥rmula] para sugerir rolagens\n- Use [CREATE:tipo:nome] para sugerir cria√ß√£o de elementos\n- Use [SEARCH:tipo:termo] para sugerir buscas\n\n**Contexto Atual:**\n- Sistema: ${e.worldContext?.systemName||"D&D 5e"}\n- Cena: ${e.worldContext?.activeScene||"N√£o especificada"}\n- Jogadores: ${e.worldContext?.playerCount||"N√£o especificado"}\n\nResponda como um mestre experiente e assistente √∫til.`}formatConversationHistory(e){return e.slice(-8).map(e=>({role:"AI Assistant"===e.user?"assistant":"user",content:e.content.length>500?e.content.substring(0,497)+"...":e.content}))}formatWorldContext(e){return e&&0!==Object.keys(e).length?`**Contexto do Mundo:**\n- Cena Ativa: ${e.activeScene||"N/A"}\n- Sistema: ${e.systemName||"N/A"}\n- Jogadores: ${e.playerCount||"N/A"}`:""}async makeAPIRequest(e){const s=Date.now();try{const t=await fetch(`${this.baseUrl}/v1/chat/completions`,{method:"POST",headers:{Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok){const e=await t.json().catch(()=>({}));if(429===t.status)throw new Error("Rate limit da OpenAI excedido. Tente novamente em alguns segundos.");if(401===t.status)throw new Error("API Key da OpenAI inv√°lida ou expirada.");if(400===t.status)throw new Error(`Requisi√ß√£o inv√°lida: ${e.error?.message||"Par√¢metros incorretos"}`);throw new Error(`API Error ${t.status}: ${e.error?.message||t.statusText}`)}const a=await t.json(),i=Date.now()-s;return console.log(`OpenAI Provider | Requisi√ß√£o conclu√≠da em ${i}ms`),a}catch(e){const t=Date.now()-s;throw console.error(`OpenAI Provider | Erro na requisi√ß√£o (${t}ms):`,e),e}}processResponse(e){try{if(!e.choices||0===e.choices.length)throw new Error("Resposta da API n√£o cont√©m choices");const s=e.choices[0];if(!s.message||!s.message.content)throw new Error("Resposta da API n√£o cont√©m conte√∫do");let t=s.message.content.trim();return t=this.processSpecialCommands(t),"length"===s.finish_reason&&(t+="\n\n*[Resposta truncada devido ao limite de tokens]*"),t.length>2e3&&(t=t.substring(0,1997)+"..."),t}catch(e){throw console.error("OpenAI Provider | Erro ao processar resposta:",e),new Error(`Erro ao processar resposta: ${e.message}`)}}processSpecialCommands(e){return e=(e=(e=e.replace(/\[ROLL:([^\]]+)\]/g,(e,s)=>`üé≤ *Sugest√£o de rolagem: ${s}*`)).replace(/\[CREATE:(\w+):([^\]]+)\]/g,(e,s,t)=>`‚ú® *Sugest√£o: Criar ${s.toLowerCase()} "${t}"*`)).replace(/\[SEARCH:(\w+):([^\]]+)\]/g,(e,s,t)=>`üîç *Sugest√£o: Buscar ${s} por "${t}"*`)}updateTokenUsage(e){e&&(this.tokenUsage.total+=e.total_tokens||0,this.tokenUsage.prompt+=e.prompt_tokens||0,this.tokenUsage.completion+=e.completion_tokens||0)}addToHistory(e,s,t,a){this.requestHistory.push({timestamp:Date.now(),user:t.user||"Unknown",message:e,response:s,model:this.model,usage:a,responseTime:Date.now()-(t.startTime||Date.now())}),this.requestHistory.length>100&&this.requestHistory.shift()}checkRateLimit(){const e=Date.now(),s=e-6e4,t=Array.from(this.rateLimiter.values()).filter(e=>e>s);return this.rateLimiter.clear(),t.forEach((e,s)=>{this.rateLimiter.set(s,e)}),!(t.length>=20)&&(this.rateLimiter.set(this.rateLimiter.size,e),!0)}async generateNPC(e,s={}){const t=`Crie um NPC detalhado do tipo "${e}" para D&D 5e.\n\n${s.description?`Descri√ß√£o adicional: ${s.description}`:""}\n${s.level?`N√≠vel/CR sugerido: ${s.level}`:""}\n${s.role?`Papel na hist√≥ria: ${s.role}`:""}\n\nForne√ßa:\n1. **Nome** e t√≠tulo (se aplic√°vel)\n2. **Ra√ßa e classe** (ou tipo de criatura)\n3. **Descri√ß√£o f√≠sica** (2-3 frases)\n4. **Personalidade** (3-4 tra√ßos distintos)\n5. **Motiva√ß√£o principal** e objetivos\n6. **Background** (breve hist√≥ria)\n7. **Estat√≠sticas b√°sicas** (CA, HP, atributos principais)\n8. **Habilidades especiais** ou equipamentos not√°veis\n\nFormato: Estruturado e pronto para uso no jogo.`;return await this.processMessage(t,{worldContext:{systemName:"D&D 5e"},specialRequest:"npc_generation"})}async explainRule(e,s="D&D 5e"){const t=`Explique detalhadamente a regra "${e}" do sistema ${s}.\n\nInclua:\n1. **Defini√ß√£o** clara da regra\n2. **Como funciona** na pr√°tica\n3. **Exemplos** de uso em jogo\n4. **Intera√ß√µes** com outras regras (se relevante)\n5. **Dicas** para mestres e jogadores\n\nSeja preciso mas acess√≠vel.`;return await this.processMessage(t,{worldContext:{systemName:s},specialRequest:"rule_explanation"})}async generateDescription(e,s,t=""){const a=`Gere uma descri√ß√£o ${e} envolvente para: "${s}"\n\n${t?`Contexto adicional: ${t}`:""}\n\nA descri√ß√£o deve ser:\n- **Imersiva** e rica em detalhes sensoriais\n- **Apropriada** para RPG de fantasia\n- **Concisa** mas evocativa (3-5 frases)\n- **√ötil** para mestres narrarem\n\nFoque em criar atmosfera e ajudar a visualizar a cena.`;return await this.processMessage(a,{specialRequest:"description_generation"})}async generateEncounter(e,s,t=5){const a=`Crie um encontro de dificuldade "${e}" para um grupo de n√≠vel ${t} em ambiente: ${s}\n\nInclua:\n1. **Descri√ß√£o da cena** e atmosfera\n2. **Inimigos** (tipos, quantidades, t√°ticas)\n3. **Terreno** e elementos ambientais\n4. **Objetivos** poss√≠veis al√©m de combate\n5. **Recompensas** apropriadas\n6. **Varia√ß√µes** para diferentes abordagens\n\nTorne o encontro memor√°vel e estrat√©gico.`;return await this.processMessage(a,{worldContext:{systemName:"D&D 5e"},specialRequest:"encounter_generation"})}async generateLoot(e,s="mixed"){const t=`Gere um tesouro apropriado para desafio de n√≠vel ${e}, tipo "${s}".\n\nInclua:\n1. **Moedas** (quantidade apropriada)\n2. **Itens mundanos** valiosos\n3. **Itens m√°gicos** (se apropriado)\n4. **Itens √∫nicos** ou com hist√≥ria\n5. **Valor total** estimado\n\nEquilibre utilidade e valor, considerando o n√≠vel do grupo.`;return await this.processMessage(t,{worldContext:{systemName:"D&D 5e"},specialRequest:"loot_generation"})}updateConfig(e){e.apiKey&&(this.apiKey=e.apiKey),e.baseUrl&&(this.baseUrl=e.baseUrl),e.model&&(this.model=e.model),e.maxTokens&&(this.maxTokens=e.maxTokens),e.temperature&&(this.temperature=e.temperature),console.log("OpenAI Provider | Configura√ß√£o atualizada")}getConfig(){return{name:this.name,model:this.model,maxTokens:this.maxTokens,temperature:this.temperature,initialized:this.initialized,hasApiKey:!!this.apiKey,tokenUsage:{...this.tokenUsage}}}getStats(){const e=this.requestHistory.filter(e=>Date.now()-e.timestamp<36e5),s=this.calculateAverageResponseTime(),t=this.requestHistory.length>0?Math.round(this.tokenUsage.total/this.requestHistory.length):0;return{name:this.name,initialized:this.initialized,totalRequests:this.requestHistory.length,recentRequests:e.length,averageResponseTime:s,tokenUsage:{...this.tokenUsage},averageTokensPerRequest:t,rateLimitStatus:{current:this.rateLimiter.size,max:20,windowMs:6e4},estimatedCost:this.calculateEstimatedCost()}}calculateAverageResponseTime(){if(0===this.requestHistory.length)return 0;const e=this.requestHistory.slice(-10),s=e.reduce((e,s)=>e+(s.responseTime||1e3),0);return Math.round(s/e.length)}calculateEstimatedCost(){const e={"gpt-4":{prompt:.03,completion:.06},"gpt-4-turbo":{prompt:.01,completion:.03},"gpt-3.5-turbo":{prompt:.001,completion:.002}},s=e[this.model]||e["gpt-4"],t=this.tokenUsage.prompt/1e3*s.prompt,a=this.tokenUsage.completion/1e3*s.completion;return{total:t+a,prompt:t,completion:a,currency:"USD"}}cleanup(){this.rateLimiter.clear(),this.requestHistory=[],this.tokenUsage={total:0,prompt:0,completion:0},this.initialized=!1,console.log("OpenAI Provider | Cleanup realizado")}}class ConfigInterface extends FormApplication{constructor(e,s={}){super({},s),this.aiAssistant=e}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{id:"ai-assistant-config",title:"AI Assistant - Configura√ß√µes",template:"modules/foundryvtt-ai-assistant/templates/config-form.hbs",width:600,height:"auto",closeOnSubmit:!0,submitOnChange:!1,submitOnClose:!1,resizable:!0,classes:["ai-assistant-config-form"]})}getData(){const e=this.aiAssistant.config;return{enabled:e.enabled,debugMode:e.debugMode,commandPrefix:e.commandPrefix,autoCreateAIUser:e.autoCreateAIUser,defaultPermissionLevel:e.defaultPermissionLevel,rateLimitEnabled:e.rateLimitEnabled,maxRequestsPerMinute:e.maxRequestsPerMinute,showStatusInChat:e.showStatusInChat,compactMode:e.compactMode,conversationHistoryLimit:e.conversationHistoryLimit,providers:this.getProviderOptions(),providerConfigs:this.getProviderConfigs(),permissionLevels:this.getPermissionLevels()}}getProviderOptions(){const e=this.aiAssistant.config.defaultProvider;return[{id:"manus",name:"Manus",selected:"manus"===e},{id:"openai",name:"OpenAI",selected:"openai"===e}]}getProviderConfigs(){const e={};return e.manus={name:"Manus",enabled:this.aiAssistant.config.providers.manus.enabled,apiKey:this.aiAssistant.config.providers.manus.apiKey,maxTokens:this.aiAssistant.config.providers.manus.maxTokens,temperature:this.aiAssistant.config.providers.manus.temperature,models:[{id:"gpt-4.1-mini",name:"GPT-4.1 Mini",selected:"gpt-4.1-mini"===this.aiAssistant.config.providers.manus.model},{id:"gpt-4.1-nano",name:"GPT-4.1 Nano",selected:"gpt-4.1-nano"===this.aiAssistant.config.providers.manus.model},{id:"gemini-2.5-flash",name:"Gemini 2.5 Flash",selected:"gemini-2.5-flash"===this.aiAssistant.config.providers.manus.model}]},e.openai={name:"OpenAI",enabled:this.aiAssistant.config.providers.openai.enabled,apiKey:this.aiAssistant.config.providers.openai.apiKey,maxTokens:this.aiAssistant.config.providers.openai.maxTokens,temperature:this.aiAssistant.config.providers.openai.temperature,models:[{id:"gpt-4",name:"GPT-4",selected:"gpt-4"===this.aiAssistant.config.providers.openai.model},{id:"gpt-4-turbo",name:"GPT-4 Turbo",selected:"gpt-4-turbo"===this.aiAssistant.config.providers.openai.model},{id:"gpt-3.5-turbo",name:"GPT-3.5 Turbo",selected:"gpt-3.5-turbo"===this.aiAssistant.config.providers.openai.model}]},e}getPermissionLevels(){const e=this.aiAssistant.config.defaultPermissionLevel;return[{id:"NONE",name:"Nenhuma",selected:"NONE"===e},{id:"BASIC",name:"B√°sica",selected:"BASIC"===e},{id:"INTERMEDIATE",name:"Intermedi√°ria",selected:"INTERMEDIATE"===e},{id:"ADVANCED",name:"Avan√ßada",selected:"ADVANCED"===e},{id:"FULL",name:"Completa",selected:"FULL"===e}]}activateListeners(e){super.activateListeners(e),e.find(".test-connection").click(this._onTestConnection.bind(this)),e.find(".reset-config").click(this._onResetConfig.bind(this)),e.find('input[name*="apiKey"]').on("input",this._onApiKeyInput.bind(this))}async _onTestConnection(e){e.preventDefault();const s=e.currentTarget,t=s.dataset.provider,a=s.textContent;s.textContent="Testando...",s.disabled=!0;try{const e=new FormData(this.form),s=e.get(`providers.${t}.apiKey`),a=e.get(`providers.${t}.model`);if(!s)throw new Error("API Key √© obrigat√≥ria");const i=this.aiAssistant.providers.get(t);if(!i||!i.testConnection)throw new Error("Provedor n√£o suporta teste de conex√£o");await i.testConnection({apiKey:s,model:a}),ui.notifications.info(`Conex√£o com ${t} testada com sucesso!`)}catch(e){ui.notifications.error(`Erro ao testar conex√£o: ${e.message}`)}finally{s.textContent=a,s.disabled=!1}}async _onResetConfig(e){e.preventDefault();await Dialog.confirm({title:"Resetar Configura√ß√µes",content:"<p>Tem certeza que deseja resetar todas as configura√ß√µes para os valores padr√£o?</p>",yes:()=>!0,no:()=>!1})&&(await this.aiAssistant.resetModule(),this.render(!0),ui.notifications.info("Configura√ß√µes resetadas para os valores padr√£o"))}_onApiKeyInput(e){const s=e.currentTarget,t=s.value.trim();t.length>0&&t.length<10?(s.style.borderColor="#ff6b6b",s.title="API Key parece muito curta"):t.length>=10?(s.style.borderColor="#51cf66",s.title="API Key v√°lida"):(s.style.borderColor="",s.title="")}async _updateObject(e,s){try{const e=foundry.utils.expandObject(s);this.aiAssistant.config=foundry.utils.mergeObject(this.aiAssistant.config,e),await this.aiAssistant.saveConfiguration(),e.providers&&await this.aiAssistant.initializeProviders(),e.defaultProvider&&e.defaultProvider!==this.aiAssistant.config.defaultProvider&&await this.aiAssistant.setProvider(e.defaultProvider),ui.notifications.info("Configura√ß√µes salvas com sucesso!")}catch(e){console.error("Erro ao salvar configura√ß√µes:",e),ui.notifications.error(`Erro ao salvar configura√ß√µes: ${e.message}`)}}static async show(e){return new ConfigInterface(e).render(!0)}}class AIAssistant{constructor(){this.initialized=!1,this.components={},this.providers=new Map,this.currentProvider=null,this.config={},this.startTime=Date.now()}async initialize(){console.log("AI Assistant | Iniciando m√≥dulo...");try{await this.loadConfiguration(),await this.initializeComponents(),await this.initializeProviders(),this.setupFoundryHooks(),this.registerModuleSettings(),this.setupPublicAPI(),function(e){"undefined"!=typeof Hooks&&Hooks.on("chatMessage",(s,t,a)=>{if("/ai-config"===t&&game.user.isGM)return ConfigInterface.show(e),!1})}(this),this.initialized=!0;const e=Date.now()-this.startTime;console.log(`AI Assistant | M√≥dulo inicializado com sucesso em ${e}ms`),this.notifyInitialization()}catch(e){throw console.error("AI Assistant | Erro na inicializa√ß√£o:",e),ui.notifications.error(`Erro ao inicializar AI Assistant: ${e.message}`),e}}async loadConfiguration(){console.log("AI Assistant | Carregando configura√ß√µes..."),this.config={enabled:!0,debugMode:!1,autoCreateAIUser:!0,defaultPermissionLevel:"BASIC",commandPrefix:"/ai",respondToMentions:!0,conversationHistoryLimit:100,defaultProvider:"manus",providers:{manus:{enabled:!0,apiKey:"",model:"gpt-4.1-mini",maxTokens:2e3,temperature:.7},openai:{enabled:!1,apiKey:"",model:"gpt-4",maxTokens:2e3,temperature:.7}},rateLimitEnabled:!0,maxRequestsPerMinute:30,requireGMApprovalForDangerous:!0,showStatusInChat:!0,showPermissionRequests:!0,compactMode:!1};try{const e=this.getStoredConfig()||{};this.config={...this.config,...e}}catch(e){console.warn("AI Assistant | Erro ao carregar configura√ß√µes salvas, usando padr√£o:",e)}}getStoredConfig(){try{return"undefined"!=typeof game&&game.settings?game.settings.get("foundryvtt-ai-assistant","config")||{}:JSON.parse(localStorage.getItem("ai-assistant-config")||"{}")}catch{return{}}}async initializeComponents(){console.log("AI Assistant | Inicializando componentes..."),this.components.permissionManager=new PermissionManager,await this.components.permissionManager.initialize(),this.components.aiUserManager=new AIUserManager(this.components.permissionManager),await this.components.aiUserManager.initialize(),this.components.apiHandler=new APIHandler(this.components.permissionManager,this.components.aiUserManager),await this.components.apiHandler.initialize(),this.components.chatInterface=new ChatInterface(this.components.permissionManager,this.components.apiHandler,this.components.aiUserManager),await this.components.chatInterface.initialize(),console.log("AI Assistant | Componentes inicializados com sucesso")}async initializeProviders(){if(console.log("AI Assistant | Inicializando provedores de IA..."),this.config.providers.manus.enabled)try{const e=new ManusProvider(this.config.providers.manus);await e.initialize(),this.providers.set("manus",e),console.log("AI Assistant | Provedor Manus inicializado")}catch(e){console.warn("AI Assistant | Erro ao inicializar provedor Manus:",e)}if(this.config.providers.openai.enabled)try{const e=new OpenAIProvider(this.config.providers.openai);await e.initialize(),this.providers.set("openai",e),console.log("AI Assistant | Provedor OpenAI inicializado")}catch(e){console.warn("AI Assistant | Erro ao inicializar provedor OpenAI:",e)}await this.setDefaultProvider()}async setDefaultProvider(){const e=this.config.defaultProvider,s=this.providers.get(e);if(s)this.currentProvider=s,console.log(`AI Assistant | Provedor padr√£o configurado: ${s.name}`);else{const e=this.providers.values().next().value;e?(this.currentProvider=e,console.log(`AI Assistant | Usando primeiro provedor dispon√≠vel: ${e.name}`)):console.warn("AI Assistant | Nenhum provedor de IA dispon√≠vel")}this.currentProvider&&this.components.chatInterface&&await this.components.chatInterface.setAIProvider(this.currentProvider.name.toLowerCase())}setupFoundryHooks(){console.log("AI Assistant | Configurando hooks do FoundryVTT..."),"undefined"!=typeof Hooks?(Hooks.on("renderChatLog",(e,s,t)=>{this.components.chatInterface&&this.components.chatInterface.onChatLogRender(e,s,t)}),Hooks.on("createChatMessage",(e,s,t)=>{this.components.chatInterface&&this.components.chatInterface.onChatMessage(e,s,t)}),Hooks.on("updateActor",(e,s,t,a)=>{this.components.apiHandler&&this.components.apiHandler.onActorUpdate(e,s,t,a)}),Hooks.on("closeSettingsConfig",()=>{this.loadConfiguration()}),console.log("AI Assistant | Hooks do FoundryVTT configurados")):console.log("AI Assistant | Hooks configurados (modo desenvolvimento)")}registerModuleSettings(){console.log("AI Assistant | Registrando configura√ß√µes do m√≥dulo..."),"undefined"!=typeof game&&game.settings?(game.settings.register("foundryvtt-ai-assistant","config",{name:"AI Assistant Configuration",hint:"Configura√ß√µes internas do m√≥dulo AI Assistant",scope:"world",config:!1,type:Object,default:{}}),game.settings.register("foundryvtt-ai-assistant","enabled",{name:"AI Assistant Habilitado",hint:"Habilita ou desabilita o m√≥dulo AI Assistant",scope:"world",config:!0,type:Boolean,default:!0,onChange:e=>{this.config.enabled=e,!e&&this.components.chatInterface&&this.components.chatInterface.disable()}}),game.settings.register("foundryvtt-ai-assistant","defaultProvider",{name:"Provedor de IA Padr√£o",hint:"Selecione o provedor de IA padr√£o",scope:"world",config:!0,type:String,choices:{manus:"Manus",openai:"OpenAI"},default:"manus",onChange:e=>{this.setProvider(e)}}),game.settings.register("foundryvtt-ai-assistant","debugMode",{name:"Modo Debug",hint:"Habilita logs detalhados para depura√ß√£o",scope:"world",config:!0,type:Boolean,default:!1,onChange:e=>{this.config.debugMode=e}}),console.log("AI Assistant | Configura√ß√µes do FoundryVTT registradas")):console.log("AI Assistant | Configura√ß√µes registradas (modo desenvolvimento)")}setupPublicAPI(){console.log("AI Assistant | Configurando API p√∫blica...");const e={isInitialized:()=>this.initialized,getStats:()=>this.getStats(),getConfig:()=>({...this.config}),getProviders:()=>Array.from(this.providers.keys()),getCurrentProvider:()=>this.currentProvider?.name||null,setProvider:e=>this.setProvider(e),checkPermission:e=>this.components.permissionManager?.checkPermission(e)||!1,grantPermission:(e,s)=>this.components.permissionManager?.grantPermission(e,s),setPermissionLevel:e=>this.components.permissionManager?.setPermissionLevel(e),sendMessage:(e,s)=>this.components.chatInterface?.sendMessage(e,s),processCommand:e=>this.components.chatInterface?.processDirectMessage(e),getAIUser:()=>this.components.aiUserManager?.getAIUser(),getAIUserStats:()=>this.components.aiUserManager?.getAIUserStats(),approvePermission:e=>this.approvePermission(e),denyPermission:e=>this.denyPermission(e),resetModule:()=>this.resetModule(),openConfig:()=>ConfigInterface.show(this)};window.aiAssistantAPI=e,console.log("AI Assistant | API p√∫blica configurada")}async setProvider(e){const s=this.providers.get(e);if(!s)throw new Error(`Provedor "${e}" n√£o encontrado`);this.currentProvider=s,this.config.defaultProvider=e,this.components.chatInterface&&await this.components.chatInterface.setAIProvider(e),await this.saveConfiguration(),console.log(`AI Assistant | Provedor alterado para: ${s.name}`)}async approvePermission(e){this.components.permissionManager&&(await this.components.permissionManager.grantPermission(e,!0,{force:!0}),console.log(`AI Assistant | Permiss√£o "${e}" aprovada para a IA`))}async denyPermission(e){this.components.permissionManager&&(await this.components.permissionManager.grantPermission(e,!1,{force:!0}),console.log(`AI Assistant | Permiss√£o "${e}" negada para a IA`))}async resetModule(){console.warn("AI Assistant | Resetando m√≥dulo...");try{this.components.permissionManager&&await this.components.permissionManager.resetToDefault();for(const e of this.providers.values())e.cleanup&&e.cleanup();await this.loadConfiguration(),console.log("AI Assistant | M√≥dulo resetado com sucesso")}catch(e){console.error("AI Assistant | Erro ao resetar m√≥dulo:",e)}}async saveConfiguration(){try{"undefined"!=typeof game&&game.settings?(await game.settings.set("foundryvtt-ai-assistant","config",this.config),console.log("AI Assistant | Configura√ß√£o salva no FoundryVTT")):(localStorage.setItem("ai-assistant-config",JSON.stringify(this.config)),console.log("AI Assistant | Configura√ß√£o salva (modo desenvolvimento)"))}catch(e){console.error("AI Assistant | Erro ao salvar configura√ß√£o:",e)}}getStats(){const e={initialized:this.initialized,enabled:this.config.enabled,uptime:Date.now()-this.startTime,currentProvider:this.currentProvider?.name||null,availableProviders:Array.from(this.providers.keys()),components:{}};this.components.permissionManager&&(e.components.permissions=this.components.permissionManager.getStats()),this.components.aiUserManager&&(e.components.aiUser=this.components.aiUserManager.getAIUserStats()),this.components.apiHandler&&(e.components.apiHandler=this.components.apiHandler.getStats()),this.components.chatInterface&&(e.components.chatInterface=this.components.chatInterface.getStats()),e.providers={};for(const[s,t]of this.providers.entries())t.getStats&&(e.providers[s]=t.getStats());return e}notifyInitialization(){const e=`AI Assistant inicializado com ${this.providers.size} provedor(es) de IA`;console.log(`AI Assistant | ${e}`)}async processTestCommand(e){this.components.chatInterface&&await this.components.chatInterface.processDirectMessage(e)}getFullStatus(){return{module:{initialized:this.initialized,uptime:Date.now()-this.startTime,config:this.config},components:{permissionManager:this.components.permissionManager?.getStats(),aiUserManager:this.components.aiUserManager?.getAIUserStats(),apiHandler:this.components.apiHandler?.getStats(),chatInterface:this.components.chatInterface?.getStats()},providers:Object.fromEntries(Array.from(this.providers.entries()).map(([e,s])=>[e,s.getStats?s.getStats():{name:s.name}]))}}}let e=null;async function initializeAIAssistant(){console.log("AI Assistant | Iniciando inicializa√ß√£o...");try{return e=new AIAssistant,await e.initialize(),window.aiAssistant=e,e}catch(e){throw console.error("AI Assistant | Falha na inicializa√ß√£o:",e),e}}"undefined"!=typeof Hooks?(Hooks.once("init",initializeAIAssistant),Hooks.once("ready",()=>{e&&e.initialized&&(console.log("AI Assistant | M√≥dulo pronto para uso!"),e.config.enabled&&game.user.isGM&&ui.notifications.info("AI Assistant carregado com sucesso!"))})):initializeAIAssistant().then(()=>{console.log("AI Assistant | M√≥dulo pronto para uso (modo desenvolvimento)!"),console.log("AI Assistant | Estat√≠sticas:",e.getStats()),console.log("AI Assistant | API dispon√≠vel em window.aiAssistantAPI"),console.log("AI Assistant | Inst√¢ncia dispon√≠vel em window.aiAssistant")}).catch(e=>{console.error("AI Assistant | Erro na inicializa√ß√£o:",e)});export{AIAssistant,initializeAIAssistant};
//# sourceMappingURL=index.js.map